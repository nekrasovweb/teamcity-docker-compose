version: '3'

services:
  server:
    image: jetbrains/teamcity-server:${TEAMCITY_VERSION}
    networks:
      - web
      - default
    volumes:
      - server_data:/data/teamcity_server/datadir
      - server_logs:/opt/teamcity/logs
    hostname: ${VIRTUAL_HOST}
    ports:
      - "8111"
    depends_on:
      - postgres
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=server"
    # VIRTUAL_HOST for local case should be localhost
    # if you wanna nossl version for non local case... no, you don't
      - "traefik.frontend.rule=Host:localhost"
      - "traefik.docker.network=web"
      - "traefik.port=8111"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  agent:
    build: ./agents/python-node-yarn
    env_file: .env
    #     if you need docker inside the agent
    #     (http://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  postgres:
    build: ./postgres
    volumes:
      - postgres_pg_data:/var/lib/postgresql/data
      - postgres_pg_backup:/backups
    env_file: .env
    labels:
      - "traefik.enable=false"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  traefik:
    image: traefik:1.7-alpine
    restart: on-failure
    command:
      - --logLevel=ERROR
      - --docker
      - --docker.watch=true
      - --docker.exposedByDefault=false
      - --docker.domain=docker.localhost
      - --defaultEntryPoints=http
      - --entryPoints=Name:http Address::80
    ports:
      - "80:80"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

networks:
  web:
    external: true

volumes:
  server_data:
  server_logs:
  postgres_pg_data:
  postgres_pg_backup: